{"version":3,"sources":["table/index.js","topic/index.js","App.js","serviceWorker.js","index.js"],"names":["MuiVirtualizedTable","getRowClassName","_ref","index","_this$props","_this","props","classes","rowClassName","onRowClick","classNames","tableRow","flexContainer","Object","defineProperty","tableRowHover","cellRenderer","_ref2","cellData","_ref2$columnIndex","columnIndex","_this$props2","columns","rowHeight","react_default","a","createElement","TableCell_default","component","className","tableCell","noClick","variant","style","height","align","numeric","headerRenderer","_ref3","_direction","label","dataKey","sortBy","sortDirection","_this$props3","headerHeight","sort","direction","SortDirection","ASC","DESC","inner","disableSort","TableSortLabel_default","active","_this2","this","_this$props4","tableProps","objectWithoutProperties","es","_ref4","width","assign","table","map","_ref5","renderer","_ref5$cellContentRend","cellContentRenderer","other","cellRendererProps","key","headerProps","objectSpread","React","PureComponent","defaultProps","WrappedVirtualizedTable","withStyles","theme","fontFamily","typography","display","alignItems","boxSizing","cursor","&:hover","backgroundColor","palette","grey","flex","ReactVirtualizedTable","Paper_default","rowCount","data","length","rowGetter","_ref6","event","console","log","csvExporter","ExportToCsv","fieldSeparator","quoteStrings","decimalSeparator","showLabels","showTitle","title","useTextFile","useBom","useKeysAsHeaders","button","margin","spacing","unit","leftIcon","marginRight","rightIcon","marginLeft","iconSmall","fontSize","centered","textAlign","container","flexWrap","textField","dense","marginTop","menu","_useState","useState","_useState2","slicedToArray","q","setTopic","_useState3","_useState4","apiKey","setApiKey","_useState5","_useState6","language","setLanguage","_useState7","_useState8","results","setResults","getResults","page","arguments","undefined","params","pageSize","axios","get","getAllResults","asyncToGenerator","regenerator_default","mark","_callee","e","datas","res","mp","wrap","_context","prev","next","sent","articles","x","push","source_id","source","id","source_name","name","author","description","url","published_at","publishedAt","content","Math","ceil","totalResults","concat","stop","_x","apply","results_display","TextField_default","select","value","onChange","target","SelectProps","MenuProps","helperText","option","MenuItem_default","placeholder","InputLabelProps","shrink","Button_default","color","onClick","Search_default","generateCsv","Save_default","App","topic","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d36cec40.chunk.js","sourcesContent":["/* eslint-disable no-console */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Paper from '@material-ui/core/Paper';\nimport { AutoSizer, Column, SortDirection, Table } from 'react-virtualized';\n\nconst styles = theme => ({\n  table: {\n    fontFamily: theme.typography.fontFamily,\n  },\n  flexContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    boxSizing: 'border-box',\n  },\n  tableRow: {\n    cursor: 'pointer',\n  },\n  tableRowHover: {\n    '&:hover': {\n      backgroundColor: theme.palette.grey[200],\n    },\n  },\n  tableCell: {\n    flex: 1,\n  },\n  noClick: {\n    cursor: 'initial',\n  },\n});\n\nclass MuiVirtualizedTable extends React.PureComponent {\n  getRowClassName = ({ index }) => {\n    const { classes, rowClassName, onRowClick } = this.props;\n\n    return classNames(classes.tableRow, classes.flexContainer, rowClassName, {\n      [classes.tableRowHover]: index !== -1 && onRowClick != null,\n    });\n  };\n\n  cellRenderer = ({ cellData, columnIndex = null }) => {\n    const { columns, classes, rowHeight, onRowClick } = this.props;\n    return (\n      <TableCell\n        component=\"div\"\n        className={classNames(classes.tableCell, classes.flexContainer, {\n          [classes.noClick]: onRowClick == null,\n        })}\n        variant=\"body\"\n        style={{ height: rowHeight }}\n        align={(columnIndex != null && columns[columnIndex].numeric) || false ? 'right' : 'left'}\n      >\n        {cellData}\n      </TableCell>\n    );\n  };\n\n  headerRenderer = ({ label, columnIndex, dataKey, sortBy, sortDirection }) => {\n    const { headerHeight, columns, classes, sort } = this.props;\n    const direction = {\n      [SortDirection.ASC]: 'asc',\n      [SortDirection.DESC]: 'desc',\n    };\n\n    const inner =\n      !columns[columnIndex].disableSort && sort != null ? (\n        <TableSortLabel active={dataKey === sortBy} direction={direction[sortDirection]}>\n          {label}\n        </TableSortLabel>\n      ) : (\n        label\n      );\n\n    return (\n      <TableCell\n        component=\"div\"\n        className={classNames(classes.tableCell, classes.flexContainer, classes.noClick)}\n        variant=\"head\"\n        style={{ height: headerHeight }}\n        align={columns[columnIndex].numeric || false ? 'right' : 'left'}\n      >\n        {inner}\n      </TableCell>\n    );\n  };\n\n  render() {\n    const { classes, columns, ...tableProps } = this.props;\n    return (\n      <AutoSizer>\n        {({ height, width }) => (\n          <Table\n            className={classes.table}\n            height={height}\n            width={width}\n            {...tableProps}\n            rowClassName={this.getRowClassName}\n          >\n            {columns.map(({ cellContentRenderer = null, className, dataKey, ...other }, index) => {\n              let renderer;\n              if (cellContentRenderer != null) {\n                renderer = cellRendererProps =>\n                  this.cellRenderer({\n                    cellData: cellContentRenderer(cellRendererProps),\n                    columnIndex: index,\n                  });\n              } else {\n                renderer = this.cellRenderer;\n              }\n\n              return (\n                <Column\n                  key={dataKey}\n                  headerRenderer={headerProps =>\n                    this.headerRenderer({\n                      ...headerProps,\n                      columnIndex: index,\n                    })\n                  }\n                  className={classNames(classes.flexContainer, className)}\n                  cellRenderer={renderer}\n                  dataKey={dataKey}\n                  {...other}\n                />\n              );\n            })}\n          </Table>\n        )}\n      </AutoSizer>\n    );\n  }\n}\n\nMuiVirtualizedTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n  columns: PropTypes.arrayOf(\n    PropTypes.shape({\n      cellContentRenderer: PropTypes.func,\n      dataKey: PropTypes.string.isRequired,\n      width: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n  headerHeight: PropTypes.number,\n  onRowClick: PropTypes.func,\n  rowClassName: PropTypes.string,\n  rowHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.func]),\n  sort: PropTypes.func,\n};\n\nMuiVirtualizedTable.defaultProps = {\n  headerHeight: 56,\n  rowHeight: 80,\n};\n\nconst WrappedVirtualizedTable = withStyles(styles)(MuiVirtualizedTable);\n\n\nfunction ReactVirtualizedTable(props) {\n  return (\n    <Paper style={{ height: 'calc(100vh - 100px)', width: '100%' }}>\n      <WrappedVirtualizedTable\n        rowCount={props.data.length}\n        rowGetter={({ index }) => props.data[index]}\n        onRowClick={event => console.log(event)}\n        columns={[\n          {\n            width: 120,\n            label: 'Source Id',\n            dataKey: 'source_id',\n          },\n          {\n            width: 120,\n            label: 'Source Name',\n            dataKey: 'source_name',            \n          },\n          {\n            width: 200,\n            label: 'Author',\n            dataKey: 'author',\n\n          },\n          {\n            width: 250,\n            label: 'Title',\n            dataKey: 'title',\n          },\n          {\n            width: 500,\n            label: 'Description',\n            dataKey: 'description',\n          },\n          {\n            width: 150,\n            label: 'Url',\n            dataKey: 'url',\n          },\n          {\n            width: 100,\n            label: 'Published At',\n            dataKey: 'published_at',\n          },\n          {\n            width: 500,\n            label: 'Content',\n            dataKey: 'content',\n          },\n        ]}\n      />\n    </Paper>\n  );\n}\n\nexport default ReactVirtualizedTable;\n","import axios from 'axios';\nimport { ExportToCsv } from 'export-to-csv';\nimport React from 'react';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport SearchIcon from '@material-ui/icons/Search';\nimport SaveIcon from '@material-ui/icons/Save';\nimport TextField from '@material-ui/core/TextField';\n\nimport ReactVirtualizedTable from '../table/';\n\nimport { Histogram, DensitySeries, BarSeries, withParentSize, XAxis, YAxis } from '@data-ui/histogram';\n\nconst options = { \n  fieldSeparator: ';',\n  quoteStrings: '|',\n  decimalSeparator: '.',\n  showLabels: true, \n  showTitle: true,\n  title: 'Trending topic',\n  useTextFile: false,\n  useBom: false,\n  useKeysAsHeaders: true,\n};\n\nconst csvExporter = new ExportToCsv(options);\n\nconst styles = theme => ({\n  button: {\n    margin: theme.spacing.unit,\n  },\n  leftIcon: {\n    marginRight: theme.spacing.unit,\n  },\n  rightIcon: {\n    marginLeft: theme.spacing.unit,\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n  centered: {\n    textAlign: 'center',\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n  },\n  dense: {\n    marginTop: 16,\n  },\n  menu: {\n    width: 200,\n  },\n  \n});\n\n\nfunction Topic(props) {\n  const { classes } = props;\n  const [q, setTopic] = useState('deepfake');\n  const [apiKey, setApiKey] = useState('');\n  const [language, setLanguage] = useState('all');\n  const [results, setResults] = useState([]);\n  const pageSize = 100;\n\n  const languages = [\n    {\n      value: 'all',\n      label: 'All',\n    },\n    {\n      value: 'en',\n      label: 'English',\n    },\n    {\n      value: 'es',\n      label: 'russian',\n    },\n    {\n      value: 'fr',\n      label: 'French',\n    },\n    {\n      value: 'he',\n      label: 'Hungarian',\n    },\n    {\n      value: 'it',\n      label: 'Italian',\n    },\n    {\n      value: 'nl',\n      label: 'Dutch',\n    },\n    {\n      value: 'no',\n      label: 'Norwegian',\n    },\n    {\n      value: 'pt',\n      label: 'Portuguese',\n    },\n    {\n      value: 'ru',\n      label: 'Russian',\n    },\n    {\n      value: 'zh',\n      label: 'Chinese',\n    },\n\n  ]\n\n  const getResults = (page=1) => {\n    let params = {\n      q:q,\n      apiKey:apiKey,\n      language:language === \"all\" ? null : language,\n      pageSize:pageSize,\n      page:page,\n    }\n    return axios.get('https://newsapi.org/v2/everything/', {params:params})\n  }\n  const getAllResults = async function(e){\n    let page = 1\n    let datas = []\n    let res = await getResults(page)\n    res.data.articles.map(x => datas.push({\n      source_id: x.source.id,\n      source_name: x.source.name, \n      author: x.author,\n      title: x.title,\n      description: x.description,\n      url: x.url,\n      published_at: x.publishedAt,\n      content: x.content\n    }))\n    page = page + 1\n    console.log(page)\n    let mp = Math.ceil(res.data.totalResults / pageSize)\n    for (page; page <= mp; page++){\n      let res = await getResults(page)\n      res.data.articles.map(x => datas.push({\n        source_id: x.source.id,\n        source_name: x.source.name, \n        author: x.author,\n        title: x.title,\n        description: x.description,\n        url: x.url,\n        published_at: x.publishedAt,\n        content: x.content\n      }))\n      \n    }\n    setResults([...datas])\n  }\n  let results_display = results.length ? <ReactVirtualizedTable data={results} /> : null\n  let histogram_display = results.length ? <ReactVirtualizedTable data={results} /> : null\n  return (\n    <div className={classes.centered}>\n      <TextField\n          id=\"outlined-select-language\"\n          select\n          label=\"Select\"\n          className={classes.textField}\n          value={language}\n          onChange={e => setLanguage(e.target.value)}\n          SelectProps={{\n            MenuProps: {\n              className: classes.menu,\n            },\n          }}\n          helperText=\"Please select your language\"\n          margin=\"normal\"\n          variant=\"outlined\"\n        >\n        {languages.map(option => (\n          <MenuItem key={option.value} value={option.value}>\n            {option.label}\n          </MenuItem>\n        ))}\n      </TextField>\n      <TextField\n        id=\"api-key\"\n        style={{ margin: 8 }}\n        placeholder=\"put your NewApi.org API KEY\"\n        margin=\"normal\"\n        InputLabelProps={{\n          shrink: false,\n        }}\n        onChange={e => setApiKey(e.target.value)}\n      />\n      <TextField\n          id=\"topic-search\"\n          style={{ margin: 8 }}\n          placeholder=\"Search a trending topic\"\n          margin=\"normal\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          onChange={e => setTopic(e.target.value)}\n        />\n      <Button \n          variant=\"contained\"\n          color=\"secondary\"\n          className={classes.button}\n          onClick={(e) => getAllResults(e)} >\n        Search\n        <SearchIcon className={classes.rightIcon} />\n      </Button>\n      <Button \n          variant=\"contained\"\n          color=\"secondary\"\n          className={classes.button}\n          onClick={(e) => csvExporter.generateCsv(results)} >\n        Save as CSV\n        <SaveIcon className={classes.rightIcon} />\n      </Button>\n      {results_display}\n    </div>\n  )\n}\n\nTopic.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(Topic)\n","import React, { Component } from 'react';\nimport Topic from './topic/';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Topic/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}